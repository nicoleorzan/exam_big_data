total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia (IDA & IBRD)", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (IDA & IBRD countries)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & the Caribbean (IDA & IBRD countries)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="East Asia & Pacific (IDA & IBRD countries)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (excluding high income)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="North America", "America"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean", "America")) %>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean (excluding high income)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="European Union", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Euro area", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia (IDA & IBRD)", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (IDA & IBRD countries)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & the Caribbean (IDA & IBRD countries)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="East Asia & Pacific (IDA & IBRD countries)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (excluding high income)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="North America", "America"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean", "America")) %>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean (excluding high income)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="European Union", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Euro area", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Small states", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Other small states", "Europe"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia (IDA & IBRD)", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (IDA & IBRD countries)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & the Caribbean (IDA & IBRD countries)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="East Asia & Pacific (IDA & IBRD countries)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (excluding high income)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="North America", "America"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean", "America")) %>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean (excluding high income)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="European Union", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Euro area", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
{countries_world <- read.csv("Datasets/countries of the world.csv", na.strings=c("","NA"))
colnames(countries_world)[4]="Area"
colnames(countries_world)[5]="Density"
countries_world[,2] <- str_trim(countries_world[,2], "both")
#MPI_national <- read.csv("MPI_national.csv")
#MPI_subnational <- read.csv("MPI_subnational.csv")
immunization <- read.csv("Datasets/immunization.csv", skip=4)
death <- read.csv("Datasets/death_rate.csv", skip=4)
Gdp <- read.csv("Datasets/GDP_annual_growth.csv", skip=4)
total_population <- read.csv("Datasets/total_population.csv", skip=4)
}
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
country_region <- data.frame(Country.Code=countries_world$Country.Code,
Country=countries_world$Country,
Region=countries_world$Region)
country_region$Country.Code <- as.character(country_region$Country.Code)
na_reg <- function(x, country_region){
colnames(x) <- c("Country", "Country.Code", "Indicator.Name", "Indicator.Code", substring(colnames(x[,6:length(x)-1]), 2), "X")
# eliminate NA
x <- x %>% select_if(~sum(!is.na(.)) > 0)
years <- x[,5:ncol(x)] %>%
filter_all(any_vars(!is.na(.)))
x <- semi_join(x, years, by=c("2014", "2015", "2016")) %>%
select(-Indicator.Name, -Indicator.Code)
# Add region
x$Country.Code <- as.character(x$Country.Code)
x <- left_join(x, country_region, "Country.Code") %>%
select(Region, everything()) %>%
select(-Country.y) %>%
rename(Country = Country.x)
# Add continent
x <<- x %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
}
{datas <- vector(mode="list", length=4)
names(datas) <- c("immunization", "death", "Gdp", "total_population")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_reg, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]}
total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Small states", "Europe"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia (IDA & IBRD)", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (IDA & IBRD countries)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & the Caribbean (IDA & IBRD countries)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="East Asia & Pacific (IDA & IBRD countries)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (excluding high income)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="North America", "America"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean", "America")) %>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean (excluding high income)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="European Union", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Euro area", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
{countries_world <- read.csv("Datasets/countries of the world.csv", na.strings=c("","NA"))
colnames(countries_world)[4]="Area"
colnames(countries_world)[5]="Density"
countries_world[,2] <- str_trim(countries_world[,2], "both")
#MPI_national <- read.csv("MPI_national.csv")
#MPI_subnational <- read.csv("MPI_subnational.csv")
immunization <- read.csv("Datasets/immunization.csv", skip=4)
death <- read.csv("Datasets/death_rate.csv", skip=4)
Gdp <- read.csv("Datasets/GDP_annual_growth.csv", skip=4)
total_population <- read.csv("Datasets/total_population.csv", skip=4)
}
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
country_region <- data.frame(Country.Code=countries_world$Country.Code,
Country=countries_world$Country,
Region=countries_world$Region)
country_region$Country.Code <- as.character(country_region$Country.Code)
na_reg <- function(x, country_region){
colnames(x) <- c("Country", "Country.Code", "Indicator.Name", "Indicator.Code", substring(colnames(x[,6:length(x)-1]), 2), "X")
# eliminate NA
x <- x %>% select_if(~sum(!is.na(.)) > 0)
years <- x[,5:ncol(x)] %>%
filter_all(any_vars(!is.na(.)))
x <- semi_join(x, years, by=c("2014", "2015", "2016")) %>%
select(-Indicator.Name, -Indicator.Code)
# Add region
x$Country.Code <- as.character(x$Country.Code)
x <- left_join(x, country_region, "Country.Code") %>%
select(Region, everything()) %>%
select(-Country.y) %>%
rename(Country = Country.x)
# Add continent
x <<- x %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
}
{datas <- vector(mode="list", length=4)
names(datas) <- c("immunization", "death", "Gdp", "total_population")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_reg, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]}
total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
#mutate(Continent=replace(Continent, Country=="Small states", "Europe"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia (IDA & IBRD)", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (IDA & IBRD countries)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & the Caribbean (IDA & IBRD countries)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="East Asia & Pacific (IDA & IBRD countries)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (excluding high income)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="North America", "America"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean", "America")) %>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean (excluding high income)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="European Union", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Euro area", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(count)#sum(`1960`))
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
count() #sum(`1960`))
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
total_population %>%
select(Country, Continent, `1960`) %>%
filter(Continent=="NA")
total_population %>%
select(Country, Continent, `1960`) %>%
filter(Continent==is.na)
total_population %>%
select(Country, Continent, `1960`) %>%
filter(Continent==is.na())
total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))
total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))%>%
summarize(sum(`1960`))
total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))%>%
#totpopDF <- data.frame(Country = total_population$Country.Code, Population1960 = total_population$`1960`)
#totpopDF$Country <- as.character(totpopDF$Country)
#left_join(countries_world, totpopDF, by=c(countries_world$Country.Code))
countries_world <- countries_world %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
fffff <- total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))
View(fffff)
fffff <- total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))%>%
summarize(sum(`1960`))
fffff <- total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))#%>%
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
summarize(sum(`1960`, na.rm=TRUE))
total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))
fffff <- total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))%>%
summarize(sum(`1960`, na.rm=TRUE))
total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))%>%
summarize(sum(`1960`, na.rm=TRUE))
3032160395
27609209259
total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))%>%
filter(Continent!="World")%>%
summarize(sum(`1960`, na.rm=TRUE))
total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))%>%
filter(Continent!="World")
total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))%>%
filter(Country!="World")%>%
summarize(sum(`1960`, na.rm=TRUE))
fffff <- total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))#%>%
View(fffff)
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
partial <- total_population %>%
select(Country, Continent) %>%
na.omit()
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
partial <- total_population %>%
select(Country, Continent, Region) %>%
na.omit()
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
png(filename="/home/nicole/Data Science/exam_big_data/Images/continent_distribution.png",width=650,height=400)
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
dev.off()
View(partial)
View(partial)
partial <- total_population %>%
select(Country, Continent, Region) %>%
na.omit()
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
partial <- total_population %>%
select(Country, Continent, Region, `2017`) %>%
na.omit()
png(filename="/home/nicole/Data Science/exam_big_data/Images/continent_distribution.png",width=650,height=400)
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
dev.off()
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
ggplot(partial, aes(x=Continent, y=1960, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
png(filename="/home/nicole/Data Science/exam_big_data/Images/continent_distribution_old.png",width=650,height=400)
ggplot(partial, aes(x=Continent, y=1960, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
dev.off()
partial <- total_population %>%
select(Country, Continent, Region, `1960`,`2017`) %>%
na.omit() %>%
summarize(sum(`1960`))
partial <- total_population %>%
select(Country, Continent, Region, `1960`,`2017`) %>%
na.omit()# %>%
total_population %>%
select(Country, Continent, Region, `1960`,`2017`) %>%
na.omit() %>%
summarize(sum(`1960`))
ggplot(partial, aes(x=Continent, y=2017))
ggplot(partial, aes(x=Continent, y=2017))+
geom_bar(width=0.7)
ggplot(partial, aes(x=Continent, y=2017))+
geom_bar(width=0.7, stat="identity")
ggplot(partial, aes(x=Continent, y=1960))+
geom_bar(width=0.7, stat="identity")
png(filename="/home/nicole/Data Science/exam_big_data/Images/continent_distribution.png",width=650,height=400)
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
dev.off()
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
ggplot(partial, aes(x=Continent, y=1960))+
geom_bar(width=0.7, stat="identity")
totpopDF <- data.frame(country = total_population$Country.Code, Population1960 = total_population$`1960`)
totpopMap <- joinCountryData2Map(totpopDF, joinCode = "ISO3",nameJoinColumn = "country")
mapCountryData(totpopMap, nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), colourPalette = "terrain")
mapCountryData(totpopMap, mapRegion='africa', nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), numCats=10, colourPalette = "terrain")
mapCountryData(totpopMap, nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), colourPalette = "terrain")
png(filename="/home/nicole/Data Science/Exam_data_analysis/worldmap_1960.png",width=650,height=400)
mapCountryData(totpopMap, nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), colourPalette = "terrain")
mapCountryData(totpopMap, nameColumnToPlot="Population1960", catMethod = "FixedWidth",
missingCountryCol = gray(.8), colourPalette = "terrain")
mapCountryData(totpopMap, nameColumnToPlot="Population1960", catMethod = "idth",
missingCountryCol = gray(.8), colourPalette = "terrain")
?mapCountryData
mapCountryData(totpopMap, nameColumnToPlot="Population1960", catMethod = "pretty",
missingCountryCol = gray(.8), colourPalette = "terrain")
mapCountryData(totpopMap, nameColumnToPlot="Population1960", catMethod = "pretty",
missingCountryCol = gray(.8), colourPalette = "terrain")
d
mapCountryData(totpopMap, nameColumnToPlot="Population1960", catMethod = "pretty",
missingCountryCol = gray(.8), colourPalette = "terrain")
totpopMap <- joinCountryData2Map(totpopDF, joinCode = "ISO3",nameJoinColumn = "country")
mapCountryData(totpopMap, nameColumnToPlot="Population1960", catMethod = "pretty",
missingCountryCol = gray(.8), colourPalette = "terrain")
mapCountryData(totpopMap, mapRegion='africa', nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), numCats=10, colourPalette = "terrain")
