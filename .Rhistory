legend.text=element_text(size=13), legend.title=element_text(size=14))
ggplot(partial, aes(x=Continent, y=1960, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
ggplot(partial, aes(x=Continent, y=1960, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
{
library(dplyr)
library(ggplot2)
library(countrycode)
library(tidyr)
library(stringr)
}
setwd('/home/nicole/Data Science/exam_big_data')
{countries_world <- read.csv("Datasets/countries of the world.csv", na.strings=c("","NA"))
colnames(countries_world)[4]="Area"
colnames(countries_world)[5]="Density"
countries_world[,2] <- str_trim(countries_world[,2], "both")
immunization <- read.csv("Datasets/immunization.csv", skip=4)
fert <- read.csv("Datasets/fertility.csv", skip=4)
death <- read.csv("Datasets/death_rate.csv", skip=4)
Gdp <- read.csv("Datasets/GDP_annual_growth.csv", skip=4)
total_population <- read.csv("Datasets/total_population.csv", skip=4)
}
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
country_region <- data.frame(Country.Code=countries_world$Country.Code,
Country=countries_world$Country,
Region=countries_world$Region,
Area=countries_world$Area)
country_region$Country.Code <- as.character(country_region$Country.Code)
na_region_continent <- function(x, country_region){
colnames(x) <- c("Country", "Country.Code", "Indicator.Name", "Indicator.Code", substring(colnames(x[,6:length(x)-1]), 2), "X")
# eliminate NA
x <- x %>% select_if(~sum(!is.na(.)) > 0)
years <- x[,5:ncol(x)] %>%
filter_all(any_vars(!is.na(.)))
x <- semi_join(x, years, by=c("2014", "2015", "2016")) %>%
select(-Indicator.Name, -Indicator.Code)
# Add region
x$Country.Code <- as.character(x$Country.Code)
x <- left_join(x, country_region, "Country.Code") %>%
select(Region, everything()) %>%
select(-Country.y) %>%
rename(Country = Country.x)
# Add continent
x <<- x %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
}
{datas <- vector(mode="list", length=5)
names(datas) <- c("immunization", "death", "Gdp", "total_population", "fert")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
datas[[5]] <- fert
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_region_continent, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]
fert <- datas[[5]]
}
total_population <- total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
v = t(total_population)
colnames(v)=v[1,]
v <- v[-c(1,2,3,4, nrow(v)), ]
v1 <- as.data.frame(v)
indx <- sapply(v1, is.factor)
v1[indx] <- lapply(v1[indx], function(x) as.numeric(as.character(x)))
cor(v1)
s <- data.frame(cor(v1))
is.na(s)
rownames(s) <- colnames(s)
e <-s[which(s$Italy>0.95),]
View(e)
library(corrplot)
corrplot(e)
View(e)
corrplot(s)
View(e)
is.data.frame(s)
dimnames(s)
ncol(s)
nrow(s)
dimnames(s) <- dimnames(s[[1]])
dimnames(w)
corrplot(w)
library(tidyverse)
{
library(dplyr)
library(ggplot2)
library(countrycode)
library(tidyr)
library(stringr)
}
{
library(dplyr)
library(ggplot2)
library(countrycode)
library(tidyr)
library(stringr)
}
setwd('/home/nicole/Data Science/exam_big_data')
{countries_world <- read.csv("Datasets/countries of the world.csv", na.strings=c("","NA"))
colnames(countries_world)[4]="Area"
colnames(countries_world)[5]="Density"
countries_world[,2] <- str_trim(countries_world[,2], "both")
immunization <- read.csv("Datasets/immunization.csv", skip=4)
fert <- read.csv("Datasets/fertility.csv", skip=4)
death <- read.csv("Datasets/death_rate.csv", skip=4)
Gdp <- read.csv("Datasets/GDP_annual_growth.csv", skip=4)
total_population <- read.csv("Datasets/total_population.csv", skip=4)
}
{
###====== Adding country code to world countries
###====== using countrycode package !!!
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
###======
#### taking piece of countries_world dataset
#### to deal with other datasets
country_region <- data.frame(Country.Code=countries_world$Country.Code,
Country=countries_world$Country,
Region=countries_world$Region,
Area=countries_world$Area)
country_region$Country.Code <- as.character(country_region$Country.Code)
#######==== Dropping columns and rows which ONLY ======########
#######==== CONTAIN NA's; adding Region and Continent ======########
na_region_continent <- function(x, country_region){
colnames(x) <- c("Country", "Country.Code", "Indicator.Name", "Indicator.Code", substring(colnames(x[,6:length(x)-1]), 2), "X")
# eliminate NA
x <- x %>% select_if(~sum(!is.na(.)) > 0)
years <- x[,5:ncol(x)] %>%
filter_all(any_vars(!is.na(.)))
x <- semi_join(x, years, by=c("2014", "2015", "2016")) %>%
select(-Indicator.Name, -Indicator.Code)
# Add region
x$Country.Code <- as.character(x$Country.Code)
x <- left_join(x, country_region, "Country.Code") %>%
select(Region, everything()) %>%
select(-Country.y) %>%
rename(Country = Country.x)
# Add continent
x <<- x %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
}
{datas <- vector(mode="list", length=5)
names(datas) <- c("immunization", "death", "Gdp", "total_population", "fert")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
datas[[5]] <- fert
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_region_continent, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]
fert <- datas[[5]]
}
# cleaning additive data
total_population <- total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
##### END DATA CLEANING #######
}
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
{
###====== Adding country code to world countries
###====== using countrycode package !!!
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
###======
#### taking piece of countries_world dataset
#### to deal with other datasets
country_region <- data.frame(Country.Code=countries_world$Country.Code,
Country=countries_world$Country,
Region=countries_world$Region,
Area=countries_world$Area)
country_region$Country.Code <- as.character(country_region$Country.Code)
#######==== Dropping columns and rows which ONLY ======########
#######==== CONTAIN NA's; adding Region and Continent ======########
na_region_continent <- function(x, country_region){
colnames(x) <- c("Country", "Country.Code", "Indicator.Name", "Indicator.Code", substring(colnames(x[,6:length(x)-1]), 2), "X")
# eliminate NA
x <- x %>% select_if(~sum(!is.na(.)) > 0)
years <- x[,5:ncol(x)] %>%
filter_all(any_vars(!is.na(.)))
x <- semi_join(x, years, by=c("2014", "2015", "2016")) %>%
select(-Indicator.Name, -Indicator.Code)
# Add region
x$Country.Code <- as.character(x$Country.Code)
x <- left_join(x, country_region, "Country.Code") %>%
select(Region, everything()) %>%
select(-Country.y) %>%
rename(Country = Country.x)
# Add continent
x <<- x %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
}
{datas <- vector(mode="list", length=5)
names(datas) <- c("immunization", "death", "Gdp", "total_population", "fert")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
datas[[5]] <- fert
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_region_continent, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]
fert <- datas[[5]]
}
# cleaning additive data
total_population <- total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
##### END DATA CLEANING #######
}
setwd('/home/nicole/Data Science/exam_big_data')
{countries_world <- read.csv("Datasets/countries of the world.csv", na.strings=c("","NA"))
colnames(countries_world)[4]="Area"
colnames(countries_world)[5]="Density"
countries_world[,2] <- str_trim(countries_world[,2], "both")
immunization <- read.csv("Datasets/immunization.csv", skip=4)
fert <- read.csv("Datasets/fertility.csv", skip=4)
death <- read.csv("Datasets/death_rate.csv", skip=4)
Gdp <- read.csv("Datasets/GDP_annual_growth.csv", skip=4)
total_population <- read.csv("Datasets/total_population.csv", skip=4)
}
{
###====== Adding country code to world countries
###====== using countrycode package !!!
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
###======
#### taking piece of countries_world dataset
#### to deal with other datasets
country_region <- data.frame(Country.Code=countries_world$Country.Code,
Country=countries_world$Country,
Region=countries_world$Region,
Area=countries_world$Area)
country_region$Country.Code <- as.character(country_region$Country.Code)
#######==== Dropping columns and rows which ONLY ======########
#######==== CONTAIN NA's; adding Region and Continent ======########
na_region_continent <- function(x, country_region){
colnames(x) <- c("Country", "Country.Code", "Indicator.Name", "Indicator.Code", substring(colnames(x[,6:length(x)-1]), 2), "X")
# eliminate NA
x <- x %>% select_if(~sum(!is.na(.)) > 0)
years <- x[,5:ncol(x)] %>%
filter_all(any_vars(!is.na(.)))
x <- semi_join(x, years, by=c("2014", "2015", "2016")) %>%
select(-Indicator.Name, -Indicator.Code)
# Add region
x$Country.Code <- as.character(x$Country.Code)
x <- left_join(x, country_region, "Country.Code") %>%
select(Region, everything()) %>%
select(-Country.y) %>%
rename(Country = Country.x)
# Add continent
x <<- x %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
}
{datas <- vector(mode="list", length=5)
names(datas) <- c("immunization", "death", "Gdp", "total_population", "fert")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
datas[[5]] <- fert
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_region_continent, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]
fert <- datas[[5]]
}
# cleaning additive data
total_population <- total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
##### END DATA CLEANING #######
}
{
countries_world <- read.csv("Datasets/countries of the world.csv", na.strings=c("","NA"))
colnames(countries_world)[4]="Area"
colnames(countries_world)[5]="Density"
countries_world[,2] <- str_trim(countries_world[,2], "both")
immunization <- read.csv("Datasets/immunization.csv", skip=4)
fert <- read.csv("Datasets/fertility.csv", skip=4)
death <- read.csv("Datasets/death_rate.csv", skip=4)
Gdp <- read.csv("Datasets/GDP_annual_growth.csv", skip=4)
total_population <- read.csv("Datasets/total_population.csv", skip=4)
}
{ ##### START DATA CLEANING #######
###====== Adding country code to world countries
###====== using countrycode package !!!
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
###======
#### taking piece of countries_world dataset
#### to deal with other datasets
country_region <- data.frame(Country.Code=countries_world$Country.Code,
Country=countries_world$Country,
Region=countries_world$Region,
Area=countries_world$Area)
country_region$Country.Code <- as.character(country_region$Country.Code)
#######==== Dropping columns and rows which ONLY ======########
#######==== CONTAIN NA's; adding Region and Continent ======########
na_region_continent <- function(x, country_region){
colnames(x) <- c("Country", "Country.Code", "Indicator.Name", "Indicator.Code", substring(colnames(x[,6:length(x)-1]), 2), "X")
# eliminate NA
x <- x %>% select_if(~sum(!is.na(.)) > 0)
years <- x[,5:ncol(x)] %>%
filter_all(any_vars(!is.na(.)))
x <- semi_join(x, years, by=c("2014", "2015", "2016")) %>%
select(-Indicator.Name, -Indicator.Code)
# Add region
x$Country.Code <- as.character(x$Country.Code)
x <- left_join(x, country_region, "Country.Code") %>%
select(Region, everything()) %>%
select(-Country.y) %>%
rename(Country = Country.x)
# Add continent
x <<- x %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
}
{datas <- vector(mode="list", length=5)
names(datas) <- c("immunization", "death", "Gdp", "total_population", "fert")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
datas[[5]] <- fert
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_region_continent, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]
fert <- datas[[5]]
}
# cleaning additive data
total_population <- total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
} ##### END DATA CLEANING #######
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
na_pop <- total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))#%>%
total_population %>%
select(Country, Continent, `1960`) %>%
filter(Country=="World")
countries_world <- countries_world %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
countries_world %>%
group_by(Region) %>%
count() %>%
arrange(n)
source('~/Data Science/exam_big_data/world.R')
