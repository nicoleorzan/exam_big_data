library(dplyr)
library(ggplot2)
#library(rworldmap)
library(countrycode)
library(tidyr)
library(stringr)
library(igraph)
library(ggraph)
}
setwd('/home/nicole/Data Science/exam_big_data')
{countries_world <- read.csv("Datasets/countries of the world.csv", na.strings=c("","NA"))
colnames(countries_world)[4]="Area"
colnames(countries_world)[5]="Density"
countries_world[,2] <- str_trim(countries_world[,2], "both")
immunization <- read.csv("Datasets/immunization.csv", skip=4)
death <- read.csv("Datasets/death_rate.csv", skip=4)
Gdp <- read.csv("Datasets/GDP_annual_growth.csv", skip=4)
total_population <- read.csv("Datasets/total_population.csv", skip=4)
}
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
country_region <- data.frame(Country.Code=countries_world$Country.Code,
Country=countries_world$Country,
Region=countries_world$Region,
Area=countries_world$Area)
country_region$Country.Code <- as.character(country_region$Country.Code)
na_reg <- function(x, country_region){
colnames(x) <- c("Country", "Country.Code", "Indicator.Name", "Indicator.Code", substring(colnames(x[,6:length(x)-1]), 2), "X")
# eliminate NA
x <- x %>% select_if(~sum(!is.na(.)) > 0)
years <- x[,5:ncol(x)] %>%
filter_all(any_vars(!is.na(.)))
x <- semi_join(x, years, by=c("2014", "2015", "2016")) %>%
select(-Indicator.Name, -Indicator.Code)
# Add region
x$Country.Code <- as.character(x$Country.Code)
x <- left_join(x, country_region, "Country.Code") %>%
select(Region, everything()) %>%
select(-Country.y) %>%
rename(Country = Country.x)
# Add continent
x <<- x %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
}
{datas <- vector(mode="list", length=4)
names(datas) <- c("immunization", "death", "Gdp", "total_population")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_reg, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]}
total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
total_population %>%
select(Country, Continent, `2017`) %>%
na.omit()  %>%
summarize(sum(`2017`))
total_population %>%
select(Country, Continent, `2017`) %>%
filter(is.na(Continent)) %>%
filter(`2017`>10000000 & `2017`<20000000)
{
DensityValues <- as.double(gsub(",","",as.character(countries_world$Density),fixed=TRUE))
countries_world$DensityValues <- DensityValues
countries_world$StepDensity <- as.integer(rep(0, nrow(countries_world)))
densitystep <- c(10, 25, 50, 60, 75, 100, 300, 500, 1000, 3000)
densitystep <- as.integer(densitystep)
for (i in 1:10){
val <- countries_world$DensityValues>densitystep[i]
countries_world$StepDensity[val]=i
}
}
worldpop <- total_population %>%
filter(Country=="World")
growth <- gather(worldpop, "year", "WorldPopulation", 5:ncol(worldpop)) %>%
select(-Continent, -Region, -Country.Code) %>%
filter(year != "X1960") %>%
mutate(percentage_growth = (WorldPopulation-lag(WorldPopulation))/lag(WorldPopulation)*100) %>%
select(-Country)
write.csv(file="Clean/growth_clean.csv", x=growth)
nrow(growth)
total_population <- total_population %>%
na.omit() %>%
mutate(logArea = log(Area))
population_density <- total_population %>%
mutate(Density1960=`1960`/Area) %>%
mutate(Density1970=`1970`/Area) %>%
mutate(Density1980=`1980`/Area) %>%
mutate(Density1990=`1990`/Area) %>%
mutate(Density2000=`2000`/Area) %>%
mutate(Density2010=`2010`/Area) %>%
mutate(Density2017=`2017`/Area) %>%
select(Country, Continent, Region, Country.Code,  Density1960:Density2017, Area, logArea)
nrow(total_population)
nrow(population_density)
write.csv(file="Clean/density_clean.csv", x=population_density)
write.csv(file="Clean/population_clean.csv", x=total_population)
{
pop_per_continent <- total_population[2:ncol(total_population)]%>%
select(Continent, everything(), -Region, -Country.Code, -Area, -logArea)
pop_per_continent %>%
group_by(Continent)%>%
na.omit()%>%
summarize(sum(`1960`))
pop_per_continent <- pop_per_continent %>%
na.omit() %>%
group_by(Continent) %>%
mutate_at(vars(`1960`:`2017`), sum) %>%
unique()
}
write.csv(file="Clean/pop_per_continent.csv", x=pop_per_continent)
write.csv(file="Clean/clean_immuniz.csv", x=immunization)
write.csv(file="Clean/clean_death.csv", x=death)
gro <- growth[2:nrow(growth)-1,]
g <- graph_from_data_frame(gro, directed = FALSE)
V(g)$id <- seq(1, vcount(g))
E(g)$weight
graph(gro, layout = "with_kk")+
geom_edge_link(aes(alpha = weight))+
geom_node_point()
View(gro)
is.numeric(gro)
is.numeric(gro[1])
View(gro[1])
is.numeric(gro[2])
is.numeric(gro[3])
gro <- as.numeric(gro)
gro[1] <- as.numeric(gro[1])
gro[1]
gro[1,1]
as.numeric(gro[1,1])
as.numeric(gro[1])
as.numeric(as.character(unlist(gro)))
gro <- as.numeric(as.character(unlist(gro)))
g <- graph_from_data_frame(gro, directed = FALSE)
gro <- growth[2:nrow(growth)-1,]
gro[1] <- as.numeric(as.character(unlist(gro[1])))
gro[2] <- as.numeric(as.character(unlist(gro[2])))
gro[3] <- as.numeric(as.character(unlist(gro[3])))
g <- graph_from_data_frame(gro, directed = FALSE)
V(g)$id <- seq(1, vcount(g))
E(g)$weight
graph(gro, layout = "with_kk")+
geom_edge_link(aes(alpha = weight))+
geom_node_point()
{
library(dplyr)
library(ggplot2)
library(rworldmap)
library(countrycode)
library(tidyr)
library(stringr)
}
setwd('/home/nicole/Data Science/exam_big_data/Clean')
{
density <- read.csv("density_clean.csv")
population <- read.csv("population_clean.csv")
pop_per_continent <- read.csv("pop_per_continent.csv")
growth <- read.csv("growth_clean.csv")
immunization <- read.csv("clean_immuniz.csv")
death <- read.csv("clean_death.csv")
}
colnames(immunization) <- c(colnames(immunization)[1:5], substring(colnames(immunization[,7:length(immunization)-1]), 2), "Area")
colnames(death) <- c(colnames(death)[1:5], substring(colnames(death[,7:length(death)-1]), 2), "Area")
death_years <- death %>%
na.omit() %>%
select(-X, -Country, -Country.Code, -Area) %>%
group_by(Region) %>%
mutate_at(vars(`1960`:`2016`), sum) %>%
unique()
deaths_gather <- gather(death_years, "year", "deaths", 3:ncol(death_years))
ggplot(deaths_gather, aes(x=year, y=log(deaths), color=Region))+
geom_point()+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2016, 5))
imm_years <- immunization %>%
# na.omit() %>%
select(-X, -Country, -Country.Code, -Area) %>%
group_by(Region) %>%
mutate_at(vars(`1980`:`2016`), sum) %>%
unique()
imm_gather <- gather(imm_years, "year", "deaths", 3:ncol(imm_years))
ggplot(imm_gather, aes(x=year, y=log(deaths), color=Region))+
geom_point()+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2016, 5))
death_years <- death %>%
filter(Country=="World")%>%
gather("year", "deaths", 7:ncol(death)-1) %>%
select(-Continent, -Region, -Country.Code, -Area, -X)
immun_years <- immunization %>%
filter(Country=="World")%>%
gather("year", "immunization", 7:ncol(immunization)-1) %>%
select(-Continent, -Region, -Country.Code, -Area, -X)
immun_years$Country <- as.character(immun_years$Country)
death_years$Country <- as.character(death_years$Country)
immu_and_death <- inner_join(death_years, immun_years, by=c("Country","year"))
immu_and_death %>%
gather(key, value, deaths, immunization) %>%
ggplot(aes(x=year, y=value, colour=key)) +
geom_point()
ggplot(immun_years, aes(x=year, y=immunization))+geom_point()
ggplot(death_years, aes(x=year, y=deaths))+geom_point()
{
library(dplyr)
library(ggplot2)
library(rworldmap)
library(countrycode)
library(tidyr)
library(stringr)
}
setwd('/home/nicole/Data Science/exam_big_data')
growth <- read.csv("Clean/growth_clean.csv")
growth <- growth[-nrow(growth),]
?glm
{
library(dplyr)
library(ggplot2)
library(rworldmap)
library(countrycode)
library(tidyr)
library(stringr)
library(ggmap)
library(shiny)
#library(plotly)
}
setwd('/home/nicole/Data Science/exam_big_data')
{countries_world <- read.csv("Datasets/countries of the world.csv", na.strings=c("","NA"))
colnames(countries_world)[4]="Area"
colnames(countries_world)[5]="Density"
countries_world[,2] <- str_trim(countries_world[,2], "both")
#MPI_national <- read.csv("MPI_national.csv")
#MPI_subnational <- read.csv("MPI_subnational.csv")
immunization <- read.csv("Datasets/immunization.csv", skip=4)
death <- read.csv("Datasets/death_rate.csv", skip=4)
Gdp <- read.csv("Datasets/GDP_annual_growth.csv", skip=4)
total_population <- read.csv("Datasets/total_population.csv", skip=4)
}
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
country_region <- data.frame(Country.Code=countries_world$Country.Code,
Country=countries_world$Country,
Region=countries_world$Region)
country_region$Country.Code <- as.character(country_region$Country.Code)
na_reg <- function(x, country_region){
colnames(x) <- c("Country", "Country.Code", "Indicator.Name", "Indicator.Code", substring(colnames(x[,6:length(x)-1]), 2), "X")
# eliminate NA
x <- x %>% select_if(~sum(!is.na(.)) > 0)
years <- x[,5:ncol(x)] %>%
filter_all(any_vars(!is.na(.)))
x <- semi_join(x, years, by=c("2014", "2015", "2016")) %>%
select(-Indicator.Name, -Indicator.Code)
# Add region
x$Country.Code <- as.character(x$Country.Code)
x <- left_join(x, country_region, "Country.Code") %>%
select(Region, everything()) %>%
select(-Country.y) %>%
rename(Country = Country.x)
# Add continent
x <<- x %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
}
{datas <- vector(mode="list", length=4)
names(datas) <- c("immunization", "death", "Gdp", "total_population")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_reg, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]}
total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
#mutate(Continent=replace(Continent, Country=="Small states", "Europe"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia (IDA & IBRD)", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (IDA & IBRD countries)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & the Caribbean (IDA & IBRD countries)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="East Asia & Pacific (IDA & IBRD countries)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (excluding high income)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="North America", "America"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean", "America")) %>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean (excluding high income)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="European Union", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Euro area", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
na_pop <- total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))#%>%
filter(Country!="World")%>%
summarize(sum(`1960`, na.rm=TRUE))
countries_world <- countries_world %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
countries_world %>%
group_by(Region) %>%
count() %>%
arrange(n)
countries_world %>%
group_by(Continent) %>%
count() %>%
arrange(n)
countries_world %>%
select(Country, Continent) %>%
filter(Continent=="Oceania")
{
DensityValues <- as.double(gsub(",","",as.character(countries_world$Density),fixed=TRUE))
countries_world$DensityValues <- DensityValues
countries_world$StepDensity <- as.integer(rep(0, nrow(countries_world)))
densitystep <- c(10, 25, 50, 60, 75, 100, 300, 500, 1000, 3000)
densitystep <- as.integer(densitystep)
for (i in 1:10){
val <- countries_world$DensityValues>densitystep[i]
countries_world$StepDensity[val]=i
}
}
ggplot(data = countries_world) +
geom_bar(mapping = aes(x = StepDensity))
ggplot(countries_world, mapping = aes(x=Population, y=Area))+
geom_point(mapping=aes(color=StepDensity))
ggplot(countries_world, mapping=aes(x=log2(Population), y=log2(Area)))+
geom_point(mapping=aes(color=StepDensity))
ggplot(countries_world, aes(x=Region, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity", color="red4")+#fill="sienna2")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
theme(axis.text=element_text(size=7))+
guides(fill=FALSE)
ggplot(countries_world, aes(x=Region))+
geom_bar(color="chocolate4", fill="lightblue2")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
theme(axis.text=element_text(size=7))
ggplot(countries_world[1:15,], aes(x=Country, y=Population))+
geom_bar(width=0.7, stat="identity", color="red4", fill="sienna2")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
theme(axis.text=element_text(size=7))
countries_world %>%
select(Population) %>%
summarize(sum(as.numeric(Population)))
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
partial <- total_population %>%
select(Country, Continent, Region, `1960`,`2017`) %>%
na.omit() #%>%
partial <- total_population %>%
select(Country, Continent, Region, `1960`,`2017`) %>%
na.omit() #%>%
summarize(sum(`1960`))
ggplot(partial, aes(x=Continent, y=1960))+
geom_bar(width=0.7, stat="identity")
png(filename="/home/nicole/Data Science/exam_big_data/Images/continent_distribution.png",width=650,height=400)
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
dev.off()
ggplot(partial, aes(x=Continent, y=1960, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
areas <-countries_world %>%
group_by(Continent) %>%
mutate(Continent_Area_km2 = sum(Area)*2.589988,Continent_Pop = sum(as.numeric(Population))) %>%
mutate(Continent_Density_ppl_on_km2 = Continent_Pop/Continent_Area_km2) %>%
select(Continent_Area_km2, Continent_Pop, Continent_Density_ppl_on_km2 , everything())%>%
distinct(Continent_Area_km2, Continent_Pop, Continent_Density_ppl_on_km2) %>%
arrange(desc(Continent_Area_km2))
set.seed(12)
immsample <- immunization %>%
group_by(Region) %>%
sample_n(size = 1, replace=FALSE)
View(immsample)
prova <- gather(immsample, "year", "counts", 5:ncol(immsample)) #:D :D :D
ggplot(prova, aes(x=year, y=counts))+
geom_line(aes(group = Country, color=Country))
immunization_time_series <- gather(immunization, "year", "counts", 5:ncol(immunization))
immunization_time_series <- immunization_time_series %>%
group_by(Continent, year) %>%
arrange(year) %>%
mutate(mean_per_year_per_continent = mean(counts, na.rm = T))
immunization_prv_sample <- immunization_time_series %>%
group_by(Continent, year) %>%
sample_n(size = 1, replace=FALSE)
ggplot(immunization_prv_sample, aes(x=year, y=mean_per_year_per_continent))+
geom_line(aes(group = Continent, color=Continent))
immsample <- immunization %>%
group_by(Region) %>%
sample_n(size = 1, replace=FALSE)
View(immsample)
library(leaflet)
setwd('/home/nicole/Data Science/exam_big_data/Clean')
population <- read.csv("population_clean.csv")
install.packages("geosonio")
leaflet(population) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons( fillColor = ~mypalette(POP2005), stroke=FALSE )
mypalette = colorNumeric( palette="viridis", domain=world_spdf@data$POP2005, na.color="transparent")
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip"
)
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip")
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip" , destfile="world_shape_file.zip")
system("unzip world_shape_file.zip")
library(rgdal)
install.packages("rgdal")
{
library(leaflet)
library(dplyr)
library(rgdal)
library(ggplot2)
library(rworldmap)
library(countrycode)
library(tidyr)
library(stringr)
}
world_spdf=readOGR( dsn= getwd() , layer="TM_WORLD_BORDERS_SIMPL-0.3")
{
library(leaflet)
library(dplyr)
library(rgdal)
library(ggplot2)
library(rworldmap)
library(countrycode)
library(tidyr)
library(stringr)
}
install.packages("rgdal7")
install.packages("rgdal")
{
library(leaflet)
library(dplyr)
library(rgdal)
library(ggplot2)
library(rworldmap)
library(countrycode)
library(tidyr)
library(stringr)
}
require(devtools)
install_version("rgdal", version = "0.3-6", repos = "http://cran.us.r-project.org")
install_version("rgdal", version = "0.3.6", repos = "http://cran.us.r-project.org")
install_version("rgdal", version = "0.3", repos = "http://cran.us.r-project.org")
