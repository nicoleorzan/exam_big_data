View(pop)
w <- pop2 %>%
filter(`Country Name`=="World")%>%
select(-`Country Name`, -`Country Code`, -`Indicator Name`, -`Indicator Code`, -X63)
colnames(w) <- c(substring(colnames(w[,1:length(w)]), 2))
colnames(w)
w[2,]<- colnames(w)
w <- data.frame(t(w))
colnames(w) <- c("world_pop", "year")
w$world_pop <- as.numeric(as.character(w$world_pop))
w$year <- as.numeric(as.character(w$year))
{
w <- pop2 %>%
filter(`Country Name`=="World")%>%
select(-`Country Name`, -`Country Code`, -`Indicator Name`, -`Indicator Code`, -X63)
#select(-Country.Name, -Country.Code, -Indicator.Name, -Indicator.Code, -X)
colnames(w) <- c(substring(colnames(w[,1:length(w)]), 2))
colnames(w)
w[2,]<- colnames(w)
w <- data.frame(t(w))
colnames(w) <- c("world_pop", "year")
w$world_pop <- as.numeric(as.character(w$world_pop))
w$year <- as.numeric(as.character(w$year))
}
newdata <- seq(2018,2100)
newdata <- data.frame(newdata)
colnames(newdata)[1] <- "year"
mod <- lm(world_pop ~ year, w)
lmod <- predict(mod, newdata)
newdata$lm <- data.frame(lmod)
mod <- nls(world_pop ~ SSlogis(year, phi1, phi2, phi3), data = w)
pred <- predict(mod, newdata)
mod <- nls(world_pop ~ SSlogis(year, phi1, phi2, phi3), data = w)
pred <- predict(mod, newdata)
vv <- data.frame(pred)
newdata$world_pop <- data.frame(pred[1:83])
newdata <- newdata %>%
select(world_pop, year, lm)
newdata$world_pop <- as.numeric(unlist(newdata$world_pop))
newdata$lm <- as.numeric(unlist(newdata$lm))
w$lm <- w$world_pop
tot <- rbind(w, newdata)
p1 <- plot_ly(tot, x = ~year, y = ~world_pop, name = 'Logistic model', type = 'scatter', mode = 'lines+markers') %>%
add_trace(y = ~lm, name = 'Lineaar model', mode = 'lines+markers') %>%
layout(title = "Predicted trend of world population growth until 2100",
xaxis = list(title = "Year"),
yaxis = list (title = paste("Pop quantity")))
p1
p1 <- plot_ly(tot, x = ~year, y = ~world_pop, name = 'Logistic model', type = 'scatter', mode = 'lines+markers') %>%
#add_trace(y = ~lm, name = 'Lineaar model', mode = 'lines+markers') %>%
layout(title = "Predicted trend of world population growth until 2100",
xaxis = list(title = "Year"),
yaxis = list (title = paste("Pop quantity")))
p1
pop2 <- read_csv("Datasets/total_population.csv", skip=4)
{
w <- pop %>%
#filter(`Country Name`=="World")%>%
#select(-`Country Name`, -`Country Code`, -`Indicator Name`, -`Indicator Code`, -X63)
filter(Countr.Name=="World")%>%
select(-Country.Name, -Country.Code, -Indicator.Name, -Indicator.Code, -X)
colnames(w) <- c(substring(colnames(w[,1:length(w)]), 2))
colnames(w)
w[2,]<- colnames(w)
w <- data.frame(t(w))
colnames(w) <- c("world_pop", "year")
w$world_pop <- as.numeric(as.character(w$world_pop))
w$year <- as.numeric(as.character(w$year))
}
newdata <- seq(2018,2100)
newdata <- data.frame(newdata)
colnames(newdata)[1] <- "year"
w <- pop %>%
#filter(`Country Name`=="World")%>%
#select(-`Country Name`, -`Country Code`, -`Indicator Name`, -`Indicator Code`, -X63)
filter(Country.Name=="World")%>%
select(-Country.Name, -Country.Code, -Indicator.Name, -Indicator.Code, -X)
colnames(w) <- c(substring(colnames(w[,1:length(w)]), 2))
colnames(w)
w[2,]<- colnames(w)
w <- data.frame(t(w))
colnames(w) <- c("world_pop", "year")
w$world_pop <- as.numeric(as.character(w$world_pop))
w$year <- as.numeric(as.character(w$year))
{
w <- pop %>%
#filter(`Country Name`=="World")%>%
#select(-`Country Name`, -`Country Code`, -`Indicator Name`, -`Indicator Code`, -X63)
filter(Country.Name=="World")%>%
select(-Country.Name, -Country.Code, -Indicator.Name, -Indicator.Code, -X)
colnames(w) <- c(substring(colnames(w[,1:length(w)]), 2))
colnames(w)
w[2,]<- colnames(w)
w <- data.frame(t(w))
colnames(w) <- c("world_pop", "year")
w$world_pop <- as.numeric(as.character(w$world_pop))
w$year <- as.numeric(as.character(w$year))
}
newdata <- seq(2018,2100)
newdata <- data.frame(newdata)
colnames(newdata)[1] <- "year"
mod <- lm(world_pop ~ year, w)
lmod <- predict(mod, newdata)
newdata$lm <- data.frame(lmod)
mod <- nls(world_pop ~ SSlogis(year, phi1, phi2, phi3), data = w)
pred <- predict(mod, newdata)
vv <- data.frame(pred)
newdata$world_pop <- data.frame(pred[1:83])
newdata <- newdata %>%
select(world_pop, year, lm)
newdata$world_pop <- as.numeric(unlist(newdata$world_pop))
newdata$lm <- as.numeric(unlist(newdata$lm))
w$lm <- w$world_pop
tot <- rbind(w, newdata)
p1 <- plot_ly(tot, x = ~year, y = ~world_pop, name = 'Logistic model', type = 'scatter', mode = 'lines+markers') %>%
#add_trace(y = ~lm, name = 'Lineaar model', mode = 'lines+markers') %>%
layout(title = "Predicted trend of world population growth until 2100",
xaxis = list(title = "Year"),
yaxis = list (title = paste("Pop quantity")))
p1
p1 <- plot_ly(tot, x = ~year, y = ~world_pop, name = 'Logistic model', type = 'scatter', mode = 'lines+markers') %>%
add_trace(y = ~lm, name = 'Lineaar model', mode = 'lines+markers') %>%
layout(title = "Predicted trend of world population growth until 2100",
xaxis = list(title = "Year"),
yaxis = list (title = paste("Pop quantity")))
p1
parse_number("$123,456,789")
parse_number("123'456'789")
setwd('/home/nicole/Data Science/exam_big_data')
pop <- read.csv("Datasets/total_population.csv", skip=4)
pop2 <- read_csv("Datasets/total_population.csv", skip=4)
pop <- read.csv("Datasets/total_population.csv", skip=4, stringsAsFactors = FALSE)
{
w <- pop %>%
#filter(`Country Name`=="World")%>%
#select(-`Country Name`, -`Country Code`, -`Indicator Name`, -`Indicator Code`, -X63)
filter(Country.Name=="World")%>%
select(-Country.Name, -Country.Code, -Indicator.Name, -Indicator.Code, -X)
colnames(w) <- c(substring(colnames(w[,1:length(w)]), 2))
colnames(w)
w[2,]<- colnames(w)
w <- data.frame(t(w))
colnames(w) <- c("world_pop", "year")
w$world_pop <- as.numeric(as.character(w$world_pop))
w$year <- as.numeric(as.character(w$year))
}
setwd('/home/nicole/Data Science/exam_big_data')
pop <- read.csv("Datasets/total_population.csv", skip=4, stringsAsFactors = FALSE)
pop2 <- read_csv("Datasets/total_population.csv", skip=4)
{
w <- pop %>%
#filter(`Country Name`=="World")%>%
#select(-`Country Name`, -`Country Code`, -`Indicator Name`, -`Indicator Code`, -X63)
filter(Country.Name=="World")%>%
select(-Country.Name, -Country.Code, -Indicator.Name, -Indicator.Code, -X)
colnames(w) <- c(substring(colnames(w[,1:length(w)]), 2))
colnames(w)
w[2,]<- colnames(w)
w <- data.frame(t(w))
colnames(w) <- c("world_pop", "year")
#w$world_pop <- as.numeric(as.character(w$world_pop))
#w$year <- as.numeric(as.character(w$year))
}
w$year <- as.numeric(w$year)
View(w)
setwd('/home/nicole/Data Science/exam_big_data')
pop <- read.csv("Datasets/total_population.csv", skip=4, stringsAsFactors = FALSE)
pop2 <- read_csv("Datasets/total_population.csv", skip=4)
{
w <- pop %>%
#filter(`Country Name`=="World")%>%
#select(-`Country Name`, -`Country Code`, -`Indicator Name`, -`Indicator Code`, -X63)
filter(Country.Name=="World")%>%
select(-Country.Name, -Country.Code, -Indicator.Name, -Indicator.Code, -X)
colnames(w) <- c(substring(colnames(w[,1:length(w)]), 2))
colnames(w)
w[2,]<- colnames(w)
w <- data.frame(t(w))
colnames(w) <- c("world_pop", "year")
w$world_pop <- as.numeric(as.character(w$world_pop))
w$year <- as.numeric(as.character(w$year))
}
newdata <- seq(2018,2100)
newdata <- data.frame(newdata)
colnames(newdata)[1] <- "year"
mod <- lm(world_pop ~ year, w)
lmod <- predict(mod, newdata)
newdata$lm <- data.frame(lmod)
mod <- nls(world_pop ~ SSlogis(year, phi1, phi2, phi3), data = w)
pred <- predict(mod, newdata)
vv <- data.frame(pred)
newdata$world_pop <- data.frame(pred[1:83])
newdata <- newdata %>%
select(world_pop, year, lm)
newdata$world_pop <- as.numeric(unlist(newdata$world_pop))
newdata$lm <- as.numeric(unlist(newdata$lm))
w$lm <- w$world_pop
tot <- rbind(w, newdata)
p1 <- plot_ly(tot, x = ~year, y = ~world_pop, name = 'Logistic model', type = 'scatter', mode = 'lines+markers') %>%
add_trace(y = ~lm, name = 'Lineaar model', mode = 'lines+markers') %>%
layout(title = "Predicted trend of world population growth until 2100",
xaxis = list(title = "Year"),
yaxis = list (title = paste("Pop quantity")))
p1
pop3 <- as_tibble(pop)
complete(pop)
complete(w)
pp <- complete(w)
View(pp)
pp <- complete(pop)
View(pp)
library(nycflights13)
nycflights13 %>% summarise()
nycflights13::flihgts %>% summarise()
flights
nycflights13::flihgts %>% summarise()
flihgts %>% summarise()
flights %>% summarise()
flights %>% summarise()delays <- flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
delays <- flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
View(delays)
setwd('/home/nicole/Data Science/exam_big_data')
{countries_world <- read.csv("Datasets/countries of the world.csv", na.strings=c("","NA"))
colnames(countries_world)[4]="Area"
colnames(countries_world)[5]="Density"
countries_world[,2] <- str_trim(countries_world[,2], "both")
#MPI_national <- read.csv("MPI_national.csv")
##MPI_subnational <- read.csv("MPI_subnational.csv")
immunization <- read.csv("Datasets/immunization.csv", skip=4)
death <- read.csv("Datasets/death_rate.csv", skip=4)
Gdp <- read.csv("Datasets/GDP_annual_growth.csv", skip=4)
total_population <- read.csv("Datasets/total_population.csv", skip=4)
}
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
country_region <- data.frame(Country.Code=countries_world$Country.Code,
Country=countries_world$Country,
Region=countries_world$Region)
country_region$Country.Code <- as.character(country_region$Country.Code)
na_reg <- function(x, country_region){
colnames(x) <- c("Country", "Country.Code", "Indicator.Name", "Indicator.Code", substring(colnames(x[,6:length(x)-1]), 2), "X")
# eliminate NA
x <- x %>% select_if(~sum(!is.na(.)) > 0)
years <- x[,5:ncol(x)] %>%
filter_all(any_vars(!is.na(.)))
x <- semi_join(x, years, by=c("2014", "2015", "2016")) %>%
select(-Indicator.Name, -Indicator.Code)
# Add region
x$Country.Code <- as.character(x$Country.Code)
x <- left_join(x, country_region, "Country.Code") %>%
select(Region, everything()) %>%
select(-Country.y) %>%
rename(Country = Country.x)
# Add continent
x <<- x %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
}
{datas <- vector(mode="list", length=4)
names(datas) <- c("immunization", "death", "Gdp", "total_population")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_reg, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]}
total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
#mutate(Continent=replace(Continent, Country=="Small states", "Europe"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia (IDA & IBRD)", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (IDA & IBRD countries)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & the Caribbean (IDA & IBRD countries)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="East Asia & Pacific (IDA & IBRD countries)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (excluding high income)", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="South Asia", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
#mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
#mutate(Continent=replace(Continent, Country=="North America", "America"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean", "America")) %>%
#mutate(Continent=replace(Continent, Country=="Latin America & Caribbean (excluding high income)", "America"))%>%
#mutate(Continent=replace(Continent, Country=="European Union", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
#mutate(Continent=replace(Continent, Country=="Euro area", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
na_pop <- total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))#%>%
filter(Country!="World")%>%
summarize(sum(`1960`, na.rm=TRUE))
total_population %>%
select(Country, Continent, `1960`) %>%
filter(Country=="World")
countries_world <- countries_world %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
countries_world %>%
group_by(Region) %>%
count() %>%
arrange(n)
countries_world %>%
group_by(Continent) %>%
count() %>%
arrange(n)
{
DensityValues <- as.double(gsub(",","",as.character(countries_world$Density),fixed=TRUE))
countries_world$DensityValues <- DensityValues
countries_world$StepDensity <- as.integer(rep(0, nrow(countries_world)))
densitystep <- c(10, 25, 50, 60, 75, 100, 300, 500, 1000, 3000)
densitystep <- as.integer(densitystep)
for (i in 1:10){
val <- countries_world$DensityValues>densitystep[i]
countries_world$StepDensity[val]=i
}
}
ggplot(data = countries_world) +
geom_bar(mapping = aes(x = StepDensity))
ggplot(countries_world, mapping=aes(x=log2(Population), y=log2(Area)))+
geom_point(mapping=aes(color=StepDensity))
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
partial <- total_population %>%
select(Country, Continent, Region, `1960`,`2017`) %>%
na.omit() #%>%
summarize(sum(`1960`))
png(filename="/home/nicole/Data Science/exam_big_data/Images/continent_distribution.png",width=650,height=400)
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+ylab("count")+
ggtitle("2017 Population distribution")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
dev.off()
ggplot(partial, aes(x=Continent, y=1960, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
ggplot(partial, aes(x=Continent, y=1960, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
ggplot(partial, aes(x=Continent, y=1960, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
{
library(dplyr)
library(ggplot2)
library(countrycode)
library(tidyr)
library(stringr)
}
setwd('/home/nicole/Data Science/exam_big_data')
{countries_world <- read.csv("Datasets/countries of the world.csv", na.strings=c("","NA"))
colnames(countries_world)[4]="Area"
colnames(countries_world)[5]="Density"
countries_world[,2] <- str_trim(countries_world[,2], "both")
immunization <- read.csv("Datasets/immunization.csv", skip=4)
fert <- read.csv("Datasets/fertility.csv", skip=4)
death <- read.csv("Datasets/death_rate.csv", skip=4)
Gdp <- read.csv("Datasets/GDP_annual_growth.csv", skip=4)
total_population <- read.csv("Datasets/total_population.csv", skip=4)
}
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
country_region <- data.frame(Country.Code=countries_world$Country.Code,
Country=countries_world$Country,
Region=countries_world$Region,
Area=countries_world$Area)
country_region$Country.Code <- as.character(country_region$Country.Code)
na_region_continent <- function(x, country_region){
colnames(x) <- c("Country", "Country.Code", "Indicator.Name", "Indicator.Code", substring(colnames(x[,6:length(x)-1]), 2), "X")
# eliminate NA
x <- x %>% select_if(~sum(!is.na(.)) > 0)
years <- x[,5:ncol(x)] %>%
filter_all(any_vars(!is.na(.)))
x <- semi_join(x, years, by=c("2014", "2015", "2016")) %>%
select(-Indicator.Name, -Indicator.Code)
# Add region
x$Country.Code <- as.character(x$Country.Code)
x <- left_join(x, country_region, "Country.Code") %>%
select(Region, everything()) %>%
select(-Country.y) %>%
rename(Country = Country.x)
# Add continent
x <<- x %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
}
{datas <- vector(mode="list", length=5)
names(datas) <- c("immunization", "death", "Gdp", "total_population", "fert")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
datas[[5]] <- fert
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_region_continent, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]
fert <- datas[[5]]
}
total_population <- total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
v = t(total_population)
colnames(v)=v[1,]
v <- v[-c(1,2,3,4, nrow(v)), ]
v1 <- as.data.frame(v)
indx <- sapply(v1, is.factor)
v1[indx] <- lapply(v1[indx], function(x) as.numeric(as.character(x)))
cor(v1)
s <- data.frame(cor(v1))
is.na(s)
rownames(s) <- colnames(s)
e <-s[which(s$Italy>0.95),]
View(e)
library(corrplot)
corrplot(e)
View(e)
corrplot(s)
View(e)
is.data.frame(s)
dimnames(s)
ncol(s)
nrow(s)
dimnames(s) <- dimnames(s[[1]])
dimnames(w)
corrplot(w)
