mutate(percentage_growth = (counts-lag(counts))/lag(counts)*100) %>%
select(-Country)
growth <- gather(worldpop, "year", "World Population", 5:ncol(worldpop)) %>%
select(-Continent, -Region, -Country.Code) %>%
filter(year != "X1960") %>%
mutate(percentage_growth = (counts-lag(counts))/lag(counts)*100) %>%
select(-Country)
growth <- gather(worldpop, "year", "WorldPopulation", 5:ncol(worldpop)) %>%
select(-Continent, -Region, -Country.Code) %>%
filter(year != "X1960") %>%
mutate(percentage_growth = (WorldPopulation-lag(WorldPopulation))/lag(WorldPopulation)*100) %>%
select(-Country)
save(growth,file="growth.Rda")
knitr::opts_chunk$set(echo = TRUE)
growth <-load("growth.Rda")
View(growth)
growth <-load(growth.Rda)
growth <-load("growth.Rda")
View(growth)
load("growth.Rda")
View(growth)
load("growth.Rda")
View(growth)
head(growth, 4)
{countries_world <- read.csv("countries of the world.csv", na.strings=c("","NA"))
colnames(countries_world)[4]="Area"
colnames(countries_world)[5]="Density"
countries_world[,2] <- str_trim(countries_world[,2], "both")
#MPI_national <- read.csv("MPI_national.csv")
#MPI_subnational <- read.csv("MPI_subnational.csv")
immunization <- read.csv("immunization.csv", skip=4)
death <- read.csv("death_rate.csv", skip=4)
Gdp <- read.csv("GDP_annual_growth.csv", skip=4)
total_population <- read.csv("total_population.csv", skip=4)
}
{
countries_world$Country <- as.character(countries_world$Country)
countries_world <- countries_world %>%
mutate(Country=replace(Country, Country=="Central African Rep. ", "Central African Republic")) %>%
mutate(Country=replace(Country, Country=="Netherlands Antilles ", "Netherlands Antilles"))
countries_world$Country.Code <-
countrycode(countries_world$Country, origin='country.name',
destination='iso3c')
countries_world <- countries_world %>%
mutate(Country.Code=replace(Country.Code, Country=="Netherlands Antilles", "NA")) %>%
mutate(Country.Code=replace(Country.Code, Country=="Virgin Islands ", "VI")) %>%
select(Country.Code, everything())
}
country_region <- data.frame(Country.Code=countries_world$Country.Code,
Country=countries_world$Country,
Region=countries_world$Region)
country_region$Country.Code <- as.character(country_region$Country.Code)
na_reg <- function(x, country_region){
colnames(x) <- c("Country", "Country.Code", "Indicator.Name", "Indicator.Code", substring(colnames(x[,6:length(x)-1]), 2), "X")
# eliminate NA
x <- x %>% select_if(~sum(!is.na(.)) > 0)
years <- x[,5:ncol(x)] %>%
filter_all(any_vars(!is.na(.)))
x <- semi_join(x, years, by=c("2014", "2015", "2016")) %>%
select(-Indicator.Name, -Indicator.Code)
# Add region
x$Country.Code <- as.character(x$Country.Code)
x <- left_join(x, country_region, "Country.Code") %>%
select(Region, everything()) %>%
select(-Country.y) %>%
rename(Country = Country.x)
# Add continent
x <<- x %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
}
datas <- vector(mode="list", length=4)
names(datas) <- c("immunization", "death", "Gdp", "total_population")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_reg, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]
countries_world <- countries_world %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
countries_world %>%
group_by(Region) %>%
count() %>%
arrange(n)
worldpop <- total_population %>%
filter(Country=="World")
growth <- gather(worldpop, "year", "WorldPopulation", 5:ncol(worldpop)) %>%
select(-Continent, -Region, -Country.Code) %>%
filter(year != "X1960") %>%
mutate(percentage_growth = (WorldPopulation-lag(WorldPopulation))/lag(WorldPopulation)*100) %>%
select(-Country)
ggplot(growth, aes(x=year, y=percentage_growth))
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population")
png(filename="/home/nicole/Data Science/Exam_data_analysis/pop_growth.png",width=800,height=300)
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population")
dev.off()
png(filename="/home/nicole/Data Science/Exam_data_analysis/pop_growth.png",width=300,height=300)
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population")
dev.off()
png(filename="/home/nicole/Data Science/Exam_data_analysis/pop_growth.png",width=500,height=400)
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population")
dev.off()
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population", size=7)
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population", size=9)
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population")+
theme(axis.title.x = element_text(size=20), axis.title.y = element_text(size=20))
png(filename="/home/nicole/Data Science/Exam_data_analysis/pop_growth.png",width=500,height=400)
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population")+
theme(axis.title.x = element_text(size=20), axis.title.y = element_text(size=20))
dev.off()
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20), axis.title.y = element_text(size=20))
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
png(filename="/home/nicole/Data Science/Exam_data_analysis/pop_growth.png",width=500,height=400)
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
dev.off()
png(filename="/home/nicole/Data Science/Exam_data_analysis/pop_growth.png",width=600,height=400)
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
dev.off()
png(filename="/home/nicole/Data Science/Exam_data_analysis/pop_growth.png",width=550,height=400)
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
dev.off()
ggplot(growth, aes(x=year, y=counts, color=counts)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Population", title="World Population")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
ggplot(growth, aes(x=year, y=WorldPopulation, color=WorldPopulation)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Population", title="World Population")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
png(filename="/home/nicole/Data Science/Exam_data_analysis/pop_number.png",width=550,height=400)
ggplot(growth, aes(x=year, y=WorldPopulation, color=WorldPopulation)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Population", title="World Population")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
dev.off()
png(filename="/home/nicole/Data Science/Exam_data_analysis/pop_number.png",width=550,height=400)
ggplot(growth, aes(x=year, y=WorldPopulation, color=WorldPopulation)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Population", title="Total World Population")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
dev.off()
ggplot(data = countries_world) +
geom_bar(mapping = aes(x = StepDensity))
{
DensityValues <- as.double(gsub(",","",as.character(countries_world$Density),fixed=TRUE))
countries_world$DensityValues <- DensityValues
countries_world$StepDensity <- as.integer(rep(0, nrow(countries_world)))
densitystep <- c(10, 25, 50, 60, 75, 100, 300, 500, 1000, 3000)
densitystep <- as.integer(densitystep)
for (i in 1:10){
val <- countries_world$DensityValues>densitystep[i]
countries_world$StepDensity[val]=i
}
}
ggplot(data = countries_world) +
geom_bar(mapping = aes(x = StepDensity))
ggplot(countries_world, mapping = aes(x=Population, y=Area))+
geom_point(mapping=aes(color=StepDensity))
ggplot(countries_world, mapping=aes(x=log2(Population), y=log2(Area)))+
geom_point(mapping=aes(color=StepDensity))
ggplot(countries_world, aes(x=Region, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity", color="red4")+#fill="sienna2")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
theme(axis.text=element_text(size=7))+
guides(fill=FALSE)
ggplot(countries_world, aes(x=Region))+
geom_bar(color="chocolate4", fill="lightblue2")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
theme(axis.text=element_text(size=7))
ggplot(countries_world[1:15,], aes(x=Country, y=Population))+
geom_bar(width=0.7, stat="identity", color="red4", fill="sienna2")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
theme(axis.text=element_text(size=7))
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
png(filename="/home/nicole/Data Science/Exam_data_analysis/continent_distribution.png",width=60,height=400)
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
dev.off()
png(filename="/home/nicole/Data Science/Exam_data_analysis/continent_distribution.png",width=600,height=400)
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
dev.off()
png(filename="/home/nicole/Data Science/Exam_data_analysis/continent_distribution.png",width=600,height=400)
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12),
legend.text=element_text(size=15))
dev.off()
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12),
legend.text=element_text(size=14), legend.title=theme_text(size=14))
png(filename="/home/nicole/Data Science/Exam_data_analysis/continent_distribution.png",width=600,height=400)
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12),
legend.text=element_text(size=14), legend.title=theme_text(size=14))
dev.off()
png(filename="/home/nicole/Data Science/Exam_data_analysis/continent_distribution.png",width=600,height=400)
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12),
legend.text=element_text(size=14), legend.title=element_text(size=14))
dev.off()
png(filename="/home/nicole/Data Science/Exam_data_analysis/continent_distribution.png",width=600,height=400)
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
dev.off()
png(filename="/home/nicole/Data Science/Exam_data_analysis/continent_distribution.png",width=650,height=400)
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
dev.off()
View(total_population)
ggplot(total_population, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
png(filename="/home/nicole/Data Science/Exam_data_analysis/continent_distribution.png",width=650,height=400)
ggplot(total_population, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
dev.off()
View(total_population)
countries_world %>%
select(Population)
countries_world %>%
select(Population) %>%
summarize(sum(Population))
countries_world %>%
select(Population) %>%
summarize(sum(as.numeric(Population)))
View(countries_world)
View(countries_world)
ggplot(total_population, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
%
total_population %>%
muatet(Continent=replace(Continent, Country=="Kosovo", "Europe"))
total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe"))
total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe"))
total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Asia (IDA & IBRD)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (IDA & IBRD countries)", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Latin America & the Caribbean (IDA & IBRD countries)", "America"))%>%
mutate(Continent=replace(Continent, Country=="East Asia & Pacific (IDA & IBRD countries)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (excluding high income)", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="South Asia", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="North America", "America"))%>%
ggplot(total_population, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Asia (IDA & IBRD)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (IDA & IBRD countries)", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Latin America & the Caribbean (IDA & IBRD countries)", "America"))%>%
mutate(Continent=replace(Continent, Country=="East Asia & Pacific (IDA & IBRD countries)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (excluding high income)", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="South Asia", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="North America", "America"))
total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Asia (IDA & IBRD)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (IDA & IBRD countries)", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Latin America & the Caribbean (IDA & IBRD countries)", "America"))%>%
mutate(Continent=replace(Continent, Country=="East Asia & Pacific (IDA & IBRD countries)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (excluding high income)", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="South Asia", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="North America", "America"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Latin America & Caribbean", "America")) %>%
mutate(Continent=replace(Continent, Country=="Latin America & Caribbean (excluding high income)", "America"))%>%
mutate(Continent=replace(Continent, Country=="European Union", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
mutate(Continent=replace(Continent, Country=="Euro area", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))%>%
mutate(Continent=replace(Continent, Country=="Central Europe and the Baltics", "Europe"))%>%
ggplot(total_population, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
total_population <-total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Asia (IDA & IBRD)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (IDA & IBRD countries)", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Latin America & the Caribbean (IDA & IBRD countries)", "America"))%>%
mutate(Continent=replace(Continent, Country=="East Asia & Pacific (IDA & IBRD countries)", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa (excluding high income)", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="South Asia", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Sub-Saharan Africa", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="North America", "America"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Latin America & Caribbean", "America")) %>%
mutate(Continent=replace(Continent, Country=="Latin America & Caribbean (excluding high income)", "America"))%>%
mutate(Continent=replace(Continent, Country=="European Union", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
mutate(Continent=replace(Continent, Country=="Euro area", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))%>%
mutate(Continent=replace(Continent, Country=="Central Europe and the Baltics", "Europe"))
ggplot(total_population, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
