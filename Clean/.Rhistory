{datas <- vector(mode="list", length=5)
names(datas) <- c("immunization", "death", "Gdp", "total_population", "fert")
datas[[1]] <- immunization; datas[[2]] <- death
datas[[3]] <- Gdp; datas[[4]] <- total_population
datas[[5]] <- fert
for (i in (1:length(datas))){
print(i);  print(names(datas)[i])
tmp_data <- mget(names(datas)[i])
sapply(tmp_data, na_region_continent, country_region=country_region)
datas[[i]] <- x
}
immunization <- datas[[1]]; death <- datas[[2]]
Gdp <- datas[[3]]; total_population <- datas[[4]]
fert <- datas[[5]]
}
# cleaning additive data
total_population <- total_population %>%
mutate(Continent=replace(Continent, Country=="Kosovo", "Europe")) %>%
mutate(Continent=replace(Continent, Country=="Virgin Islands (U.S.)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Vanuatu", "Oceania"))%>%
mutate(Continent=replace(Continent, Country=="South Sudan", "Africa"))%>%
mutate(Continent=replace(Continent, Country=="Montenegro", "Europe"))%>%
mutate(Continent=replace(Continent, Country=="Sint Maarten (Dutch part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Pacific island small states", "Asia"))%>%
mutate(Continent=replace(Continent, Country=="St. Martin (French part)", "America"))%>%
mutate(Continent=replace(Continent, Country=="Caribbean small states", "America"))%>%
mutate(Continent=replace(Continent, Country=="Curacao", "America"))%>%
mutate(Continent=replace(Continent, Country=="Channel Islands", "America"))
} ##### END DATA CLEANING #######
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
na_pop <- total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))#%>%
filter(Country!="World")%>%
summarize(sum(`1960`, na.rm=TRUE))
total_population %>%
select(Country, Continent, `1960`) %>%
filter(Country=="World")
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
total_population %>%
select(Country, Continent, `1960`) %>%
filter(Country=="World")
countries_world %>%
group_by(Region) %>%
count() %>%
arrange(n)
countries_world %>%
group_by(Continent) %>%
count() %>%
arrange(n)
View(countries_world)
countries_world %>%
group_by(Density) %>%
count() %>%
arrange(n)
countries_world %>%
group_by(Population) %>%
count() %>%
arrange(n)
countries_world %>%
arrange(Population)
countries_world %>%
arrange(Population) %>%
summarise()
knitr::opts_chunk$set(echo = TRUE)
early_years <- read.ods("Datasets/world_early_ages.ods")
library(plotly)
early_years <- read.ods("Datasets/world_early_ages.ods")
early_years <- read.ods("Datasets/world_early_ages.ods")
library(readODS)
early_years <- read.ods("Datasets/world_early_ages.ods")
ear <- as_tibble(early_years)
?tibble
library(tidyr)
library(dplyr)
b <- tibble("Datasets/birth_rate.csv", skip=4)
View(b)
b <- tibble("Datasets/birth_rate.csv")
birth_rate <- read.csv("Datasets/birth_rate.csv", skip=4)
View(birth_rate)
b <- as.tibble(birth_rate)
birth_rate <- read.csv("Datasets/birth_rate.csv", skip=4)
b <- as.tibble(birth_rate)
b <- as_tibble(birth_rate)
b <- as_tibble(Datasets/birth_rate.csv)
b <- tibble(Datasets/birth_rate.csv)
b <- tibble("Datasets/birth_rate.csv")
warnings()
View(b)
?tibble
View(b)
b <- tibble("Datasets/fertility.csv")
View(b)
countries_world %>%
arrange(Population)
countries_world %>%
arrange(Population) %>%
select(Country, Region, Population)
{
DensityValues <- as.double(gsub(",","",as.character(countries_world$Density),fixed=TRUE))
countries_world$DensityValues <- DensityValues
countries_world$StepDensity <- as.integer(rep(0, nrow(countries_world)))
densitystep <- c(10, 25, 50, 60, 75, 100, 300, 500, 1000, 3000)
densitystep <- as.integer(densitystep)
for (i in 1:10){
val <- countries_world$DensityValues>densitystep[i]
countries_world$StepDensity[val]=i
}
}
ggplot(data = countries_world) +
geom_bar(mapping = aes(x = StepDensity))
ggplot(countries_world, mapping=aes(x=log2(Population), y=log2(Area)))+
geom_point(mapping=aes(color=StepDensity))
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
countries_world <- countries_world %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
partial <- total_population %>%
select(Country, Continent, Region, `1960`,`2017`) %>%
na.omit() #%>%
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+ylab("count")+
ggtitle("2017 Population distribution")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
ggplot(partial, aes(x=Continent, y=1960, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+ylab("count")+
ggtitle("2017 Population distribution")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
areas <-countries_world %>%
group_by(Continent) %>%
mutate(Continent_Area_km2 = sum(Area)*2.589988,Continent_Pop = sum(as.numeric(Population))) %>%
mutate(Continent_Density_ppl_on_km2 = Continent_Pop/Continent_Area_km2) %>%
select(Continent_Area_km2, Continent_Pop, Continent_Density_ppl_on_km2 , everything())%>%
distinct(Continent_Area_km2, Continent_Pop, Continent_Density_ppl_on_km2) %>%
arrange(desc(Continent_Area_km2))
immsample <- immunization %>%
group_by(Region) %>%
sample_n(size = 1, replace=FALSE)
View(immsample)
prova <- gather(immsample, "year", "counts", 5:ncol(immsample)) #:D :D :D
ggplot(prova, aes(x=year, y=counts))+
geom_line(aes(group = Country, color=Country))
immunization_time_series <- gather(immunization, "year", "counts", 5:ncol(immunization))
immunization_time_series <- immunization_time_series %>%
group_by(Continent, year) %>%
arrange(year) %>%
mutate(mean_per_year_per_continent = mean(counts, na.rm = T))
immunization_prv_sample <- immunization_time_series %>%
group_by(Continent, year) %>%
sample_n(size = 1, replace=FALSE)
ggplot(immunization_prv_sample, aes(x=year, y=mean_per_year_per_continent))+
geom_line(aes(group = Continent, color=Continent))
immsample <- immunization %>%
group_by(Region) %>%
sample_n(size = 1, replace=FALSE)
View(immsample)
deathsample <- death %>%
filter(Country %in% immsample$Country)
d <- gather(deathsample, "year", "counts", 5:ncol(deathsample))
ggplot(d, aes(x=year, y=counts))+
geom_line(aes(group = Country, color=Country))
set.seed(12)
immsample <- immunization %>%
group_by(Region) %>%
sample_n(size = 1, replace=FALSE)
View(immsample)
View(immsample)
prova <- gather(immsample, "year", "counts", 5:ncol(immsample)) #:D :D :D
ggplot(prova, aes(x=year, y=counts))+
geom_line(aes(group = Country, color=Country))
immunization_time_series <- gather(immunization, "year", "counts", 5:ncol(immunization))
immunization_time_series <- immunization_time_series %>%
group_by(Continent, year) %>%
arrange(year) %>%
mutate(mean_per_year_per_continent = mean(counts, na.rm = T))
immunization_prv_sample <- immunization_time_series %>%
group_by(Continent, year) %>%
sample_n(size = 1, replace=FALSE)
ggplot(immunization_prv_sample, aes(x=year, y=mean_per_year_per_continent))+
geom_line(aes(group = Continent, color=Continent))
immsample <- immunization %>%
group_by(Region) %>%
sample_n(size = 1, replace=FALSE)
deathsample <- death %>%
filter(Country %in% immsample$Country)
d <- gather(deathsample, "year", "counts", 5:ncol(deathsample))
ggplot(d, aes(x=year, y=counts))+
geom_line(aes(group = Country, color=Country))
death_time_series <- gather(death, "year", "counts", 5:ncol(death))
death_time_series <- death_time_series %>%
group_by(Continent, year) %>%
arrange(year) %>%
mutate(mean_per_year_per_continent = mean(counts, na.rm = T))
death_prv_sample <- death_time_series %>%
group_by(Continent, year) %>%
sample_n(size = 1, replace=FALSE)
ggplot(death_prv_sample, aes(x=year, y=mean_per_year_per_continent))+
geom_line(aes(group = Continent, color=Continent))
set.seed(12)
n_africa <- levels(immunization$Region)[7]
imm <- immunization %>%
filter(Region==n_africa)
d <- gather(imm, "year", "counts", 4:ncol(imm))
ggplot(d, aes(x=year, y=counts))+
geom_line(aes(group = Country, color=Country))
dea <- death %>%
filter(Region==n_africa)
d <- gather(dea, "year", "counts", 4:ncol(dea))
ggplot(d, aes(x=year, y=counts))+
geom_line(aes(group = Country, color=Country))
death %>% # hanno piu` morti
select(c("Region", "Country", "X2016")) %>%
arrange(desc(X2016))%>%
head(n=3)
death %>% # hanno meno morti
select(c("Region", "Country", "X2016")) %>%
arrange(X2016)%>%
head(n=3)
countries_world %>%
select(c("Region", "Country", "Deathrate", "Net.migration")) %>%
arrange(Deathrate)%>%
head(n=3)
countries_world %>%
select(c("Region", "Country", "Deathrate", "Net.migration")) %>%
arrange(desc(Deathrate))%>%
head(n=3)
countries_world %>%
select(max(Net.migration))
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
setwd('/home/nicole/Data Science/exam_big_data/Clean')
setwd('/home/nicole/Data Science/exam_big_data/Clean')
{
immunization <- read.csv("clean_immuniz.csv")
death <- read.csv("clean_death.csv")
}
colnames(immunization) <- c(colnames(immunization)[1:5], substring(colnames(immunization[,7:length(immunization)-1]), 2), "Area")
colnames(death) <- c(colnames(death)[1:5], substring(colnames(death[,7:length(death)-1]), 2), "Area")
death_years <- death %>%
na.omit() %>%
select(-X, -Country, -Country.Code, -Area) %>%
group_by(Region) %>%
mutate_at(vars(`1960`:`2016`), sum) %>%
unique()
deaths_gather <- gather(death_years, "year", "deaths", 3:ncol(death_years))
ggplot(deaths_gather, aes(x=year, y=log(deaths), color=Region))+
geom_point()+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2016, 5))
imm_years <- immunization %>%
# na.omit() %>%
select(-X, -Country, -Country.Code, -Area) %>%
group_by(Region) %>%
mutate_at(vars(`1980`:`2016`), sum) %>%
unique()
imm_gather <- gather(imm_years, "year", "deaths", 3:ncol(imm_years))
ggplot(imm_gather, aes(x=year, y=log(deaths), color=Region))+
geom_point()+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2016, 5))
death_years <- death %>%
filter(Country=="World")%>%
gather("year", "deaths", 7:ncol(death)-1) %>%
select(-Continent, -Region, -Country.Code, -Area, -X)
immun_years <- immunization %>%
filter(Country=="World")%>%
gather("year", "immunization", 7:ncol(immunization)-1) %>%
select(-Continent, -Region, -Country.Code, -Area, -X)
immun_years$Country <- as.character(immun_years$Country)
death_years$Country <- as.character(death_years$Country)
immu_and_death <- inner_join(death_years, immun_years, by=c("Country","year"))
immu_and_death %>%
gather(key, value, deaths, immunization) %>%
ggplot(aes(x=year, y=value, colour=key)) +
geom_point()
ggplot(immun_years, aes(x=year, y=immunization))+geom_point()
ggplot(death_years, aes(x=year, y=deaths))+geom_point()
mod <- lm(log2(Population)~log2(Area), data=countries_world)
rownames(countries_world) <- countries_world$Country
outs <- car::influencePlot(mod)
n <- 3
Cooksdist <- row.names(outs[order(outs$CookD), ])
print(Cooksdist)
pred_val <- predict(mod)
plot(log2(countries_world$Population) - pred_val)
DensDF <- data.frame(country = countries_world$Country.Code, Density = countries_world$StepDensity)
DensMap <- joinCountryData2Map(DensDF, joinCode = "ISO3",nameJoinColumn = "country")
mapCountryData(DensMap, nameColumnToPlot="Density", catMethod = "categorical",
missingCountryCol = gray(.8))
library(rworldmap)
totpopDF <- data.frame(country = total_population$Country.Code, Population1960 = total_population$`1960`)
totpopMap <- joinCountryData2Map(totpopDF, joinCode = "ISO3",nameJoinColumn = "country")
library(RColorBrewer)
totpopMap <- joinCountryData2Map(totpopDF, joinCode = "ISO3",nameJoinColumn = "country")
colourPale <- brewer.pal(6, 'YlOrBr')
mapCountryData(totpopMap, nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), colourPalette=colourPale)
mapCountryData(totpopMap, mapRegion='africa', nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), numCats=10, colourPalette = "terrain")
totpopDF2017 <- data.frame(country = total_population$Country.Code, Population2017 = total_population$X2017)
totpopMap2017 <- joinCountryData2Map(totpopDF2017, joinCode = "ISO3",nameJoinColumn = "country")
mapCountryData(totpopMap2017, nameColumnToPlot="Population2017", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), numCats=10, colourPalette = "terrain")
mapCountryData(totpopMap2017, mapRegion='africa', nameColumnToPlot="Population2017", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), numCats=10, colourPalette = "terrain")
totpopDF2017 <- data.frame(country = total_population$Country.Code, Population2017 = total_population$X2017)
totpopMap2017 <- joinCountryData2Map(totpopDF2017, joinCode = "ISO3",nameJoinColumn = "country")
ggplot(growth, aes(x=year, y=WorldPopulation, color=WorldPopulation)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
theme_minimal()+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Population", title="Total World Population")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
worldpop <- total_population %>%
filter(Country=="World")
growth <- gather(worldpop, "year", "WorldPopulation", 5:ncol(worldpop)) %>%
select(-Continent, -Region, -Country.Code) %>%
filter(year != "X1960") %>%
mutate(percentage_growth = (WorldPopulation-lag(WorldPopulation))/lag(WorldPopulation)*100) %>%
select(-Country)
ggplot(growth, aes(x=year, y=percentage_growth, color=percentage_growth)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
theme_minimal()+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Growth Percentage", title="Growth Percentage of the World Population")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
ggplot(growth, aes(x=year, y=WorldPopulation, color=WorldPopulation)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+
scale_x_discrete(breaks=seq(1960, 2017, 5))+
theme_minimal()+
geom_point()+
theme(legend.position="none")+
labs(x = "Year", y="Population", title="Total World Population")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=12))
poverDF <- data.frame(country = MPI_national$ISO, poverty = MPI_national$MPI.Urban)
totpopDF <- data.frame(country = total_population$Country.Code, Population1960 = total_population$`1960`)
totpopMap <- joinCountryData2Map(totpopDF, joinCode = "ISO3",nameJoinColumn = "country")
colourPale <- brewer.pal(6, 'YlOrBr')
mapCountryData(totpopMap, nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), colourPalette=colourPale)
mapCountryData(totpopMap, mapRegion='africa', nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), numCats=10, colourPalette = "terrain")
areas <- countries_world %>%
group_by(Continent) %>%
mutate(Continent_Area_km2 = sum(Area)*2.589988,Continent_Pop = sum(as.numeric(Population))) %>%
mutate(Continent_Density_ppl_on_km2 = Continent_Pop/Continent_Area_km2) %>%
select(Continent_Area_km2, Continent_Pop, Continent_Density_ppl_on_km2 , everything())%>%
distinct(Continent_Area_km2, Continent_Pop, Continent_Density_ppl_on_km2) %>%
arrange(desc(Continent_Area_km2))
areas
countries_world %>%
group_by(Continent) %>%
mutate(Continent_Area_km2 = sum(Area)*2.589988,Continent_Pop = sum(as.numeric(Population))) %>%
mutate(Continent_Density_ppl_on_km2 = Continent_Pop/Continent_Area_km2) %>%
select(Continent_Area_km2, Continent_Pop, Continent_Density_ppl_on_km2 , everything())%>%
distinct(Continent_Area_km2, Continent_Pop, Continent_Density_ppl_on_km2) %>%
arrange(desc(Continent_Area_km2))
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+ylab("count")+
ggtitle("2017 Population distribution")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
total_population %>%
select(Country, Continent, `1960`) %>%
na.omit()  %>%
summarize(sum(`1960`))
na_pop <- total_population %>%
select(Country, Continent, `1960`) %>%
filter(is.na(Continent))#%>%
countries_world %>%
group_by(Region) %>%
count() %>%
arrange(n)
countries_world %>%
arrange(Population) %>%
select(Country, Region, Population)
countries_world %>%
group_by(Continent) %>%
mutate(Continent_Area_km2 = sum(Area)*2.589988,Continent_Pop = sum(as.numeric(Population))) %>%
mutate(Continent_Density_ppl_on_km2 = Continent_Pop/Continent_Area_km2) %>%
select(Continent_Area_km2, Continent_Pop, Continent_Density_ppl_on_km2 , everything())%>%
distinct(Continent_Area_km2, Continent_Pop, Continent_Density_ppl_on_km2) %>%
arrange(desc(Continent_Area_km2))
ggplot(data = countries_world) +
geom_bar(mapping = aes(x = StepDensity))
ggplot(countries_world, mapping=aes(x=log2(Population), y=log2(Area)))+
geom_point(mapping=aes(color=StepDensity))
countries_world <- countries_world %>%
mutate(Continent = ifelse(Region=="NORTHERN AMERICA" | Region=="LATIN AMER. & CARIB", "America", ifelse(Region=="NORTHERN AFRICA" | Region=="SUB-SAHARAN AFRICA", "Africa", ifelse(Region=="BALTICS" | Region=="WESTERN EUROPE" | Region=="EASTERN EUROPE" | Region=="C.W. OF IND. STATES", "Europe", ifelse(Region=="NEAR EAST" | Region=="ASIA (EX. NEAR EAST)", "Asia", "Oceania"))))) %>%
select(Country, Continent, everything())
ggplot(countries_world, aes(x=Continent, y=Population, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
partial <- total_population %>%
select(Country, Continent, Region, `1960`,`2017`) %>%
na.omit() #%>%
summarize(sum(`1960`))
ggplot(partial, aes(x=Continent, y=2017, fill=Region))+
geom_bar(width=0.7, stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5, size=7))+
theme(legend.text=element_text(size=6))+
theme_bw()+ylab("count")+
ggtitle("2017 Population distribution")+
theme(plot.title = element_text(size=22), axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20), axis.text=element_text(size=13),
legend.text=element_text(size=13), legend.title=element_text(size=14))
set.seed(12)
n_africa <- levels(immunization$Region)[7]
imm <- immunization %>%
filter(Region==n_africa)
View(imm)
d <- gather(imm, "year", "counts", 4:ncol(imm))
ggplot(d, aes(x=year, y=counts))+
geom_line(aes(group = Country, color=Country))
dea <- death %>%
filter(Region==n_africa)
d <- gather(dea, "year", "counts", 4:ncol(dea))
ggplot(d, aes(x=year, y=counts))+
geom_line(aes(group = Country, color=Country))
death %>% # hanno piu` morti
select(c("Region", "Country", "X2016")) %>%
arrange(desc(X2016))%>%
head(n=3)
death %>% # hanno meno morti
select(c("Region", "Country", "X2016")) %>%
arrange(X2016)%>%
head(n=3)
countries_world %>%
select(c("Region", "Country", "Deathrate", "Net.migration")) %>%
arrange(Deathrate)%>%
head(n=3)
countries_world %>%
select(c("Region", "Country", "Deathrate", "Net.migration")) %>%
arrange(desc(Deathrate))%>%
head(n=3)
countries_world %>%
select(max(Net.migration))
totpopDF <- data.frame(country = total_population$Country.Code, Population1960 = total_population$`1960`)
totpopMap <- joinCountryData2Map(totpopDF, joinCode = "ISO3",nameJoinColumn = "country")
colourPale <- brewer.pal(6, 'YlOrBr')
mapCountryData(totpopMap, nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), colourPalette=colourPale)
mapCountryData(totpopMap, mapRegion='africa', nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), numCats=10, colourPalette = "terrain")
?mapCountryData(
)
mapCountryData(totpopMap, mapRegion='africa', nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), numCats=10)#, colourPalette = "terrain")
mapCountryData(totpopMap, mapRegion='africa', nameColumnToPlot="Population1960", catMethod = "logFixedWidth",
missingCountryCol = gray(.8), numCats=10, colourPalette = "terrain")
DensDF <- data.frame(country = countries_world$Country.Code, Density = countries_world$StepDensity)
DensMap <- joinCountryData2Map(DensDF, joinCode = "ISO3",nameJoinColumn = "country")
mapCountryData(DensMap, nameColumnToPlot="Density", catMethod = "categorical",
missingCountryCol = gray(.8))
GDP_DF <- data.frame(country = countries_world$Country.Code, GDP = countries_world$GDP....per.capita.)
GDPMap <- joinCountryData2Map(GDP_DF, joinCode = "ISO3",nameJoinColumn = "country")
mapCountryData(GDPMap, nameColumnToPlot="GDP", catMethod = "fixedWidth",
missingCountryCol = gray(.8), numCats=10, colourPalette = "terrain")
